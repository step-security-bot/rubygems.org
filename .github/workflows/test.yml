name: Tests
on:
  pull_request:
  push:
    branches:
      - master
permissions:
  contents: read

jobs:
  rails:
    strategy:
      fail-fast: false
      matrix:
        rubygems_version: ['3.3.25', 'latest']
        coverage_rubygems_version: ['3.3.25']
        ruby_version: ['3.1.2']
    name: Rails tests (Ruby ${{ matrix.ruby_version }}, RubyGems ${{ matrix.rubygems_version }})
    runs-on: ubuntu-20.04
    env:
      RUBYGEMS_VERSION: ${{ matrix.rubygems_version }}
      # Fail hard when Toxiproxy is not running to ensure all tests (even Toxiproxy optional ones) are passing
      REQUIRE_TOXIPROXY: true
    steps:
    - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0
    - name: Install and start services
      run: |
        docker-compose up -d
    - name: Wait for ES to boot
      run: |
        timeout 300 bash -c "until curl --silent --output /dev/null http://localhost:9200/_cat/health?h=st; do printf '.'; sleep 5; done; printf '\n'"
    - uses: ruby/setup-ruby@03b78bdda287ae04217ee12e4b64996630a03542 # v1.131.0
      with:
        ruby-version: ${{ matrix.ruby_version }}
        bundler-cache: true
    - name: set rubygems version
      run: |
        if [ "$RUBYGEMS_VERSION" != "latest" ]; then
          gem update --system $RUBYGEMS_VERSION;
        else
          gem update --system
        fi
        gem --version
        bundle --version
    - name: Prepare environment
      run: |
        cp config/database.yml.sample config/database.yml
        bundle exec rake db:setup
    - name: Tests
      run: bin/rails test
    - name: Upload coverage to Codecov
      if: matrix.rubygems_version ==  matrix.coverage_rubygems_version && (success() || failure())
      uses: codecov/codecov-action@d9f34f8cd5cb3b3eb79b3e4b5dae3a16df499a70 # v3.1.1
